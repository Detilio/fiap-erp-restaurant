spring.application.name=erp-restaurant
spring.datasource.url=jdbc:mysql://localhost/erp-restaurant
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
hibernate.dialect=org.hibernate.dialect.HSQLDialect
spring.jpa.hibernate.ddl-auto=update

.yml
---------------------------------------------------------------
services:
  app:
    build: .  # Contexto para o Dockerfile (se vocÃª criou um)
    container_name: app-restaurant
    tty: true
    volumes:
      - C:/Users/rafael.detilio/Desktop/Alura/fiap-erp-restaurant:/home/developer/app  # Mapeamento ajustado
    networks:
      - app-network

  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}"
      MYSQL_DATABASE: ${MYSQL_USER}"
      MYSQL_USER: ${MYSQL_USER}"
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}"
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local

Dockerfile
---------------------
FROM mcr.microsoft.com/openjdk/jdk:21-distroless AS build

WORKDIR /build
COPY . /build

RUN ./mvnw package

FROM mcr.microsoft.com/openjdk/jdk:21-distroless

WORKDIR /app
COPY ./target/*.jar /app/run.jar

EXPOSE 8080

USER app
ENTRYPOINT ["java", "-jar", "/app/run.jar"]

-----------------------------------------------------
Para rodar o container com sucesso:
docker run -p 8080:8080 -e MYSQL_HOST="host.docker.internal" -e MYSQL_USER="root" -e MYSQL_PASSWORD=466238 fiap_erp_app

-----------------------------------------------------

Rodar docker compose no powershel:
$env:MYSQL_USER="root"
$env:MYSQL_PASSWORD="466238"
docker-compose up -d --build

Rodar docker compose no WSL:
MYSQL_USER=root MYSQL_PASSWORD=466238 docker-compose up -d --build